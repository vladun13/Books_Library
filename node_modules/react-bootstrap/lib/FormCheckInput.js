"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

exports.__esModule = true;
exports.default = void 0;

var _extends2 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));

var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));

var _classnames = _interopRequireDefault(require("classnames"));

var _react = _interopRequireDefault(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var _ThemeProvider = require("./ThemeProvider");

var _FormContext = _interopRequireDefault(require("./FormContext"));

var propTypes = {
  /**
   * @default 'form-check-input'
   */
  bsPrefix: _propTypes.default.string,

  /** A HTML id attribute, necessary for proper form accessibility. */
  id: _propTypes.default.string,

  /** The type of checkable. */
  type: _propTypes.default.oneOf(['radio', 'checkbox']).isRequired,

  /**
   * A convenience prop shortcut for adding `position-static` to the input, for
   * correct styling when used without an FormCheckLabel
   */
  isStatic: _propTypes.default.bool,

  /** Manually style the input as valid */
  isValid: _propTypes.default.bool.isRequired,

  /** Manually style the input as invalid */
  isInvalid: _propTypes.default.bool.isRequired,

  /**
   * @private
   */
  innerRef: _propTypes.default.any
};
var defaultProps = {
  type: 'checkbox'
};

function FormCheckInput(_ref) {
  var id = _ref.id,
      bsPrefix = _ref.bsPrefix,
      className = _ref.className,
      isValid = _ref.isValid,
      isInvalid = _ref.isInvalid,
      innerRef = _ref.innerRef,
      isStatic = _ref.isStatic,
      props = (0, _objectWithoutPropertiesLoose2.default)(_ref, ["id", "bsPrefix", "className", "isValid", "isInvalid", "innerRef", "isStatic"]);
  return _react.default.createElement(_FormContext.default.Consumer, null, function (_ref2) {
    var controlId = _ref2.controlId;
    return _react.default.createElement("input", (0, _extends2.default)({}, props, {
      ref: innerRef,
      id: id || controlId,
      className: (0, _classnames.default)(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid', isStatic && 'position-static')
    }));
  });
}

FormCheckInput.propTypes = propTypes;
FormCheckInput.defaultProps = defaultProps;

var _default = (0, _ThemeProvider.createBootstrapComponent)(FormCheckInput, 'form-check-input');

exports.default = _default;
module.exports = exports["default"];